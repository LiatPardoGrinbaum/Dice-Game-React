.main-container {
  display: flex;
  flex-direction: column;
  max-width: 700px;
  height: 500px;
  border-radius: 30px;
  color: yellow;
  justify-content: center;
  align-items: center;
  text-align: center;
  background: rgba(51, 51, 51, 0.685);
  color: white;
}
.main-container-light {
  background: rgb(190, 167, 167);
}
.main-inner-container {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 650px;
  height: 500px;
 
  color: rgb(51, 51, 17);
}

.title {
  color: white;
}

.player-container {
  background: rgb(130, 130, 103);
}

.player-turn {
  background: rgb(217, 217, 76);
}
.diceTools {
  display: flex;
  flex-direction: column;

  justify-content: center;
  align-items: center;
  color: aliceblue;
  width: 30%;
  height: 100%;
}

.dice{
  height: 90px;
  margin: 10px 0px;
  border-radius: 10px;
  /* border: 2px solid black; */
}
.dice1 {

  background: url("/images/dice-1.png") no-repeat center center/contain;
}
.dice2 {

  background: url("/images/dice-2.png") no-repeat center center/contain;
}
.dice3 {

  background: url("/images/dice-3.png") no-repeat center center/contain;
}
.dice4 {

  background: url("/images/dice-4.png") no-repeat center center/contain;
}
.dice5 {

  background: url("/images/dice-5.png") no-repeat center center/contain;
}
.dice6 {

  background: url("/images/dice-6.png") no-repeat center center/contain;
}
.player{
  border: 1px solid rgb(104, 104, 104);
}
.hidden {
  background: rgb(22, 184, 57);
  opacity: 0.4;
  width: 30%;
  height: 100%;
}
.active {
  background: rgb(22, 184, 57);
  width: 30%;
  height: 100%;
}

.gameOver {
  position: absolute;
  height: 400px;
  width: 700px;

  background: darkcyan;
  z-index: 1;
}

/* 

import React from "react";
import "../main-game/style.css";

class RollDice extends React.Component {
  state = {
    isRoll: false,
    dice1Id: "",
    dice2Id: "",
    dice1Value: "",
    dice2Value: "",
  };

  getRandomNum() {
    let length = 6;
    return Math.floor(Math.random() * length);
  }
  getArray = () => {
    const diceArr = [
      { id: "dice1", value: 1 },
      { id: "dice2", value: 2 },
      { id: "dice3", value: 3 },
      { id: "dice4", value: 4 },
      { id: "dice5", value: 5 },
      { id: "dice6", value: 6 },
    ];
    return diceArr;
  };
  setDiceInfo = () => {
    let random1 = this.getRandomNum();
    let random2 = this.getRandomNum();
    this.setState({ isRoll: false, dice1Id: this.getArray()[random1].id, dice1Value: this.getArray()[random1].value, dice2Id: this.getArray()[random2].id, dice2Value: this.getArray()[random2].value });
  };
  componentDidMount() {
    this.setDiceInfo();
  }

  componentDidUpdate() {
    if (this.state.isRoll) {
      this.setDiceInfo();
    }
  }

  handleClick = () => {
    this.setState({ isRoll: true });

    this.props.getCurrentSumOnClick(this.state.dice1Value + this.state.dice2Value);
  };
  render() {
    return (
      <div>
        <div id={this.state.isRoll ? this.state.dice1Id : "none"} value={this.state.dice1Value} />
        <div id={this.state.isRoll ? this.state.dice2Id : "none"} value={this.state.dice2Value} />
        <button onClick={this.handleClick}>ROLL DICE</button>
      </div>
    );
  }
}

export default RollDice;

// class Dice extends React.Component {
//   render() {
//     return <div className={this.props.class}></div>;
//   }
// }

*/
