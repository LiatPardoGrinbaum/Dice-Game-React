.main-container {
  display: flex;
  flex-direction: column;
  width: 500px;
  height: 500px;
  border: 1px solid black;
  color: yellow;
  justify-content: center;
  align-items: center;
  text-align: center;
  background: #333;
  color: white;
}

.main-inner-container {
  display: flex;

  width: 400px;
  height: 400px;
  border: 1px solid black;
  color: rgb(51, 51, 17);
}

.title {
  color: white;
}

.player-container {
  background: rgb(130, 130, 103);
}
.diceTools {
  display: flex;
  flex-direction: column;
  border: 1px solid black;
  justify-content: center;
  align-items: center;
  color: aliceblue;
}

#dice1 {
  width: 50px;
  height: 50px;
  background: url("/images/dice-1.png") no-repeat center center/contain;
}
#dice2 {
  width: 50px;
  height: 50px;
  background: url("/images/dice-2.png") no-repeat center center/contain;
}
#dice3 {
  width: 50px;
  height: 50px;
  background: url("/images/dice-3.png") no-repeat center center/contain;
}
#dice4 {
  width: 50px;
  height: 50px;
  background: url("/images/dice-4.png") no-repeat center center/contain;
}
#dice5 {
  width: 50px;
  height: 50px;
  background: url("/images/dice-5.png") no-repeat center center/contain;
}
#dice6 {
  width: 50px;
  height: 50px;
  background: url("/images/dice-6.png") no-repeat center center/contain;
}

/* 

import React from "react";
import "../main-game/style.css";

class RollDice extends React.Component {
  state = {
    isRoll: false,
    dice1Id: "",
    dice2Id: "",
    dice1Value: "",
    dice2Value: "",
  };

  getRandomNum() {
    let length = 6;
    return Math.floor(Math.random() * length);
  }
  getArray = () => {
    const diceArr = [
      { id: "dice1", value: 1 },
      { id: "dice2", value: 2 },
      { id: "dice3", value: 3 },
      { id: "dice4", value: 4 },
      { id: "dice5", value: 5 },
      { id: "dice6", value: 6 },
    ];
    return diceArr;
  };
  setDiceInfo = () => {
    let random1 = this.getRandomNum();
    let random2 = this.getRandomNum();
    this.setState({ isRoll: false, dice1Id: this.getArray()[random1].id, dice1Value: this.getArray()[random1].value, dice2Id: this.getArray()[random2].id, dice2Value: this.getArray()[random2].value });
  };
  componentDidMount() {
    this.setDiceInfo();
  }

  componentDidUpdate() {
    if (this.state.isRoll) {
      this.setDiceInfo();
    }
  }

  handleClick = () => {
    this.setState({ isRoll: true });

    this.props.getCurrentSumOnClick(this.state.dice1Value + this.state.dice2Value);
  };
  render() {
    return (
      <div>
        <div id={this.state.isRoll ? this.state.dice1Id : "none"} value={this.state.dice1Value} />
        <div id={this.state.isRoll ? this.state.dice2Id : "none"} value={this.state.dice2Value} />
        <button onClick={this.handleClick}>ROLL DICE</button>
      </div>
    );
  }
}

export default RollDice;

// class Dice extends React.Component {
//   render() {
//     return <div className={this.props.class}></div>;
//   }
// }

*/
